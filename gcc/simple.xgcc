LDC 0
LDF @step
CONS
RTN

:step
LDC 0
LD 0 1
CAR     ; [map]
LD 0 1
CDR
CAR
CDR
CAR     ; [map] [(x, y)]
LDC 0
LDC -1
CONS
LDC 1
LDC 0
CONS
LDC 0
LDC 1
CONS
LDC -1
LDC 0
CONS
LDC 0
LDC -1
CONS
LDC 1
LDC 0
CONS
LDC 0
LDC 1
CONS
LDC 0   ; [map] [(x, y)] [(0, -1)] [(1, 0)] [(0, 1)] [(-1, 0)] [(0, -1)] [(1, 0)] [(0, 1)] [0]
CONS
CONS
CONS
CONS
CONS
CONS
CONS    ; [map] [(x, y)] [{(0, -1), (1, 0), ...}]
LD 0 1
CDR
CAR
CDR
CDR
CAR     ; [map] [(x, y)] [{(0, -1), (1, 0), ...}] [dir]
LDF @decide
AP 4
CONS
RTN

; map, (x, y), [(dx, dy), ...] index --> index
:decide
LD 0 0  ; [map]
LD 0 1
CAR
LD 0 2
LD 0 3
LDF @getitem
AP 2
CAR
ADD     ; [map] [x+dx]
LD 0 1
CDR
LD 0 2
LD 0 3
LDF @getitem
AP 2
CDR
ADD     ; [map] [x+dx] [y+dy]
CONS    ; [map] [(x+dx,y+dy)]
LDF @getcell
AP 2    ; [cell]
TSEL @decide__empty @decide__wall
:decide__empty
LD 0 3
LD 0 3
LDC 4
DIV
LDC 4
MUL
SUB
RTN
:decide__wall
LD 0 0
LD 0 1
LD 0 2
LD 0 3
LDC 1
ADD
LDF @decide
TAP 4

; map, (x, y) --> cell
:getcell
LD 0 1
CDR
TSEL @getcell__y @getcell__x
:getcell__x
LD 0 0
CAR
LD 0 1
CAR
LDF @getitem
TAP 2
:getcell__y
LD 0 0
CDR
LD 0 1
CAR
LD 0 1
CDR
LDC 1
SUB
CONS
LDF @getcell
TAP 2

; list, k --> item
:getitem
LD 0 1
TSEL @getitem__k @getitem__0
:getitem__0
LD 0 0
CAR
RTN
:getitem__k
LD 0 0
CDR
LD 0 1
LDC 1
SUB
LDF @getitem
TAP 2
